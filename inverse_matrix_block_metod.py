# from time import clock_gettime
import numpy as np
import add_function as af



def cell_based_inverse_matrix_solver(matrix: np.ndarray):
    """

    Функция на вход получает матрицу в numpy.ndarray, для которой необходимо найти обратную матрицу

    Возвращает обратную матрицу в numpy.ndarray
    
    ---
    Матрица 0-3 в А располагаются следующим образом: 

    0 1

    2 3

    ---


    """
    if af.is_det_not_null(matrix):

        dim_num = matrix.shape[0]
        num_i = dim_num - 1

        arr_matrix_A = []
        # матрица 11
        arr_matrix_A.append(matrix[0:num_i, 0:num_i])
        # матрица 12
        arr_matrix_A.append(matrix[0:num_i, num_i:dim_num])
        # матрица 21
        arr_matrix_A.append(matrix[num_i:dim_num, 0:num_i])
        # матрица 22
        arr_matrix_A.append(matrix[num_i: dim_num, num_i:dim_num])

        if arr_matrix_A[0].shape[0] > 1:
            A_0_inv = cell_based_inverse_matrix_solver(arr_matrix_A[0])
        elif arr_matrix_A[0].shape[0] == 1:
            A_0_inv = np.linalg.inv(arr_matrix_A[0])

        matrix_D = np.zeros(matrix.shape)

        # 22
        matrix_D[num_i: dim_num, num_i:dim_num] = np.linalg.inv(
            arr_matrix_A[3] - np.dot(np.dot(arr_matrix_A[2], A_0_inv), arr_matrix_A[1]))
        # 12
        matrix_D[0:num_i, num_i:dim_num] = np.dot(np.dot(
            (-1 * A_0_inv), arr_matrix_A[1]), matrix_D[num_i: dim_num, num_i:dim_num])
        # 21
        matrix_D[num_i:dim_num, 0:num_i] = np.dot(
            np.dot((-1 * matrix_D[-1][-1]), arr_matrix_A[2]), A_0_inv)
        # 11
        matrix_D[0:num_i, 0:num_i] = np.dot(A_0_inv, (np.eye(
            num_i) - np.dot(arr_matrix_A[1], matrix_D[num_i:dim_num, 0:num_i])))

        return matrix_D

    raise ValueError("Неправильная матрица")


def main():
    """
    main function
    """

    a = np.array([[-4.001842783518564, 2.3441693647209574, 1.621484347133423], 
[-1.4673520061997691, -1.3365397774050436, 4.48280773621941], 
[-2.330227922243412, -3.653333671748329, -0.27052098845772576]])

    a_inv = cell_based_inverse_matrix_solver(a)
    print(af.check_multiple_original_inv(a, a_inv))
    print(af.check_multiple_det(a, a_inv))
    print(f'Число обусловленности(через вторую норму): {af.match_Cond(a, a_inv)}')
 

    a = np.array([[2.6272567160688887, -1.7069658174683386, 1.196034236795974, 4.020019625643927], 
[2.351048806014858, 3.355522490071765, 4.169436471703417, 4.196679984697202], 
[1.212749869399854, 2.0209981231399334, 0.12852348287835458, -2.168638383453753], 
[4.439897285032735, -2.2678236278148933, 2.9465381254807284, -0.7122144513438142]])

    a_inv = cell_based_inverse_matrix_solver(a)
    print(af.check_multiple_original_inv(a, a_inv))
    print(af.check_multiple_det(a, a_inv))
    print(f'Число обусловленности(через вторую норму): {af.match_Cond(a, a_inv)}')

    a = np.array([[-4.291518464670925, 4.3657780466823155, 3.0969004428750733, -0.3238752839123018, -1.9436493295537716],
[-2.666401154648499, 4.475466012136346, 3.479719278098502, -2.039455529524423, -0.8742118386433688],
[0.7842867568046241, -1.3337695426929894, -4.291759670164322, 0.6419874880742684, 4.6181849615477795],
[3.246251539827263, -3.2598380592593514, -1.2520394257757141, 2.098192203572255, -1.4523603868752497],
[3.07990803362307, 4.867363022736077, 1.2507346470150962, -0.2226664618686227, 1.2336645733094525]])

    a_inv = cell_based_inverse_matrix_solver(a)
    print(af.check_multiple_original_inv(a, a_inv))
    print(af.check_multiple_det(a, a_inv))
    print(f'Число обусловленности(через вторую норму): {af.match_Cond(a, a_inv)}')

    
    a = np.array([[0.5836244793691368, -3.0268687530314784, 0.5107009560422924, -4.943070916552628, -2.177317608240238, 0.6483469662542563],
[2.152423941942266, 4.452155991837884, 0.68120188983697, -3.3395329873778157, 0.2112062928651568, 4.41333488069106],
[-2.3548133132326985, -0.7267468668554553, 1.4803263476272495, 0.9849137774876651, -3.237854121380761, 4.293132279093548],
[3.310162250697813, 2.029825289752506, -0.7618485247126339, -1.5849276928151168, -4.565909952774315, -4.05834571186312],
[0.6831409157774715, -0.34902573484948185, 4.600276086689412, -1.5454297401547015, 1.378211083985108, 2.5965270275496275],
[0.7494720560684289, -3.728440092517933, 4.535980161674114, -1.4479989123262182, 2.7515319902624515, 4.920245073012893]])

    a_inv = cell_based_inverse_matrix_solver(a)
    print(af.check_multiple_original_inv(a, a_inv))
    print(af.check_multiple_det(a, a_inv))
    print(f'Число обусловленности(через вторую норму): {af.match_Cond(a, a_inv)}')

    a = np.array([[-2.561586117724912, 1.253865953667173, 1.6990622365613852, 4.19053797518365, 4.104454802621763, -2.4786069428343804, 3.9541924038955827],
[3.9930579358566636, -3.054133611375982, -3.347243391004655, 0.2721797571179785, -1.5160096805859693, -2.570271384561943, -2.119365257235205],
[1.8448793825529828, -2.232448553519645, 4.867979594818536, -1.301000665041856, 2.8286225981729265, 0.5918550928063357, 0.5732686721222988],
[2.916202406048697, 4.755968166421658, -0.5290198527212411, 1.7512116752656572, 1.8468323967598854, 2.216152792047909, 4.053868204637146],
[1.8727694338213965, 0.2758676378340832, -1.8372349958315484, 3.028216813995156, 3.5294862759459917, 0.29418973604960375, 4.243497769744081],
[3.647323232510608, 4.769563530158136, 4.22630825508916, 1.5178517548545827, -3.1674645363469986, -3.7850494367026952, -3.885712857397806],
[0.18004533357266084, 3.338310451289976, -3.249103789351037, -1.5999774065154893, -3.3756453031710376, -4.523660806705684, 2.863209432657742]])

    a_inv = cell_based_inverse_matrix_solver(a)
    print(af.check_multiple_original_inv(a, a_inv))
    print(af.check_multiple_det(a, a_inv))
    print(f'Число обусловленности(через вторую норму): {af.match_Cond(a, a_inv)}')
    
    a = np.array([[-1.7917182439610646, 0.747663678742537, -3.1624884947378886, -2.4792092313446235, -0.7993901103797363, -2.8409448230925163, 0.7201115741687687, -2.479859224410247],
[-4.963563261320196, -3.956064026614392, 0.43630978303214807, -3.5024130610613846, -0.6592966623948975, -0.09725899680717909, -0.8754762947670605, 2.0799067710821904],
[-4.873826076242213, -4.113315546580363, -3.5480357329562917, 1.1863993686714842, 2.4515555459952187, 0.36833880452251044, 2.6694323689630863, -3.421035504437393],  
[0.9959499179466889, 1.8082469617951515, 3.8977220191437407, -1.1138485169475976, -1.9592618902503345, -0.8336102733911552, 1.7709198808219835, 2.30923503800582],   
[1.3832993754351675, -3.643567561202825, 3.0742717973164186, 0.9960802905443957, -3.0912798461478475, -3.2322862429385815, 2.3512596907859376, -4.135763110269478],  
[-3.364547287911411, 0.007841228124883415, -0.6750525905319318, 2.8934966106373565, -1.832909557915138, 1.154994342327739, -1.2487306633606696, -0.14525512232227555],
[2.263683039662653, 4.411167105007914, -1.7822758798997285, 4.031045239449561, 1.2887828152386973, 0.335416443615121, -0.949321343514673, 2.256305574078371],        
[0.24679021745295948, 1.3154080259837162, 1.657549110180188, -2.296052020009646, 0.7578896030991853, -4.810262804478111, 3.857350182666652, 2.715768821367072]])     

    a_inv = cell_based_inverse_matrix_solver(a)
    print(af.check_multiple_original_inv(a, a_inv))
    print(af.check_multiple_det(a, a_inv))
    print(f'Число обусловленности(через вторую норму): {af.match_Cond(a, a_inv)}')

    a = np.array([[-4.04555845315191, 4.272776534016531, -3.1873273905089072, 3.1261188024650917, -0.2835622957990891, -1.2064864312386794, 2.7914963551891745, -0.7957001364048644, 2.6479408956271193],
[4.237739784714824, -3.7470636679681224, -0.47300938252987024, -1.7458470655950489, 4.43946386281452, 3.313535972617032, -3.0612861178369877, 1.8556771734844038, -1.7662742025618918],
[4.706414921020482, -1.518883045882946, 1.2194582301822576, -2.5701820874279155, -3.5574969177135127, 0.028196128351724248, 2.6928574531706753, -0.35325978985896267, -4.666379049391216],
[2.762115414725921, 2.6963398906027622, 4.504370453018581, -3.271163428561208, 0.9442326094598021, 1.4094612989180941, 2.38447983745999, -1.514363207921904, 0.7964636828453076],
[1.9344320372551485, -2.0763129969621774, 3.908416421712925, -0.23489207173619242, 0.000237254109030971, -2.2303807895214867, 4.367021833253798, -4.259188537438053, 3.9275217325989296],
[-0.4030380926322321, 2.0325429167766105, -4.010398488799158, -4.1273262134347855, 0.5868393069466116, -3.369667043287239, 2.9761544337082624, -3.8426316762853485, 4.861405930327441],
[-3.707606641704068, 3.0293777035477447, -3.8692608748094557, 2.6526471482617753, 4.086544003538133, 0.7370707825821912, 1.3430135868183077, -4.445031629432786, -2.204609142705092],
[-0.6303762885204875, 0.21583934468407673, -1.8815404242637248, 2.5701998170850686, -3.4549601705864874, -4.825315836838515, 0.12679586382965535, -4.158809062132996, -4.7213405736246985],
[-3.705611116007339, 1.3205426789134211, -1.320731910473535, -0.7311081062927194, 0.10767839642729804, 1.0211992873484537, -4.7753777172377365, 2.181576813418528, 2.106271258804549]])

    a_inv = cell_based_inverse_matrix_solver(a)
    print(af.check_multiple_original_inv(a, a_inv))
    print(af.check_multiple_det(a, a_inv))
    print(f'Число обусловленности(через вторую норму): {af.match_Cond(a, a_inv)}')

    a = np.array([[2.6601578519297018, 1.9861516817075477, 0.05603676068669472, 2.694509494616052, -1.4152362890155312, -1.780334591259379, 1.891724747864398, 4.301352551243111, 4.696641647700799, -4.561401068201306],
[-2.573465255904389, -4.156265104312439, -4.322650723655821, -1.9111945960060686, 2.4342844211311743, -1.028435313372725, 2.4337908762848564, -1.0017756602744479, 4.071341089199462, 3.4998338821344763],
[3.442895810746041, 4.632304224798631, 3.0471943483238455, -3.8182012989926806, 1.6173982926671124, 1.5822562279647698, 2.6177655730415808, 4.076855597032813, 4.864833812537517, 1.7043409545764039],
[0.03358647931239567, -0.36772733730235174, -3.89129057905391, 1.5739266414042694, -1.619949176567995, 0.22919903172659772, 2.810391556295686, -0.6847870791643196, 1.8329039756623535, 2.769858034109803],
[-3.4313612650035816, 0.4745646038679432, -0.450626544827192, 3.189515394276734, 4.371783664141812, -2.881737520717741, 3.5064686919182684, 1.7251838460109727, -2.1023996813889276, -3.879355474170607],
[3.382381430331641, -3.5007947206781864, 4.247104387560919, -0.652252789693418, -3.9833390357655487, -1.8289954922422558, 2.3726242911860673, 3.0039904559243045, -4.524008286826539, 1.5118184290808658],
[-3.108643759506413, -4.840776524790699, 3.7207848175114897, 2.8875352525808085, -2.9124064228853177, -3.8524015773735187, 3.3836912554796275, 2.047133469380025, -3.948975235352318, -0.5971011772154933],
[3.815119761417588, 0.7519675459736286, -0.8901766550223869, -3.639000914343492, 4.140806331487873, -0.991982858436252, 2.8645110250864096, 2.713920439348943, 0.5752831063329715, -4.012426613306208],
[-3.691347618651676, 2.2428602794287675, -2.6329550231321273, -2.731156393760399, -3.525798872634299, 0.8155114762086368, -0.020732525266319968, -4.186803543271171, -1.671320998449727, -1.7144352752383494],
[-0.6363370237589541, 3.8862732804029037, 3.6688112495544765, 3.3998542499121704, 1.3892043869062736, 0.43848473705898616, 2.613229152237894, -4.267256181230696, 2.8980932864657882, -2.041310959863778]])

    a_inv = cell_based_inverse_matrix_solver(a)
    print(af.check_multiple_original_inv(a, a_inv))
    print(af.check_multiple_det(a, a_inv))
    print(f'Число обусловленности(через вторую норму): {af.match_Cond(a, a_inv)}')



if __name__ == "__main__":
    main()
